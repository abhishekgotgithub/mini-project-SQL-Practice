/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

SELECT name
FROM Facilities
WHERE memebercost>0


/* Q2: How many facilities do not charge a fee to members? */

SELECT count(name)
FROM Facilities
WHERE membercost =0


/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid,
       name AS facility_name,
       membercost,
       monthlymaintenance
  FROM Facilities
  WHERE membercost < (0.2* monthlymaintenance)
  AND membercost>0
  
  
  /* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */

SELECT *
   FROM Facilities
   WHERE facid IN (1,5)
   
   
 /* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */

SELECT name,
       monthlymaintenance,
       CASE WHEN monthlymaintenance <= 100 THEN 'cheap'
       WHEN monthlymaintenance > 100 THEN 'expensive'
       END AS cheap_or_expensive
   FROM Facilities
   
   
/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

SELECT mem.firstname, mem.surname, MAX(joindate) AS latest_date
FROM Members AS mem
WHERE joindate = (
SELECT MAX( joindate )
FROM Members )


/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT DISTINCT Facilities.name,
       CONCAT(Members.firstname, ' ' , Members.surname) AS full_name
    FROM country_club.Bookings
    LEFT JOIN country_club.Members
      ON Bookings.memid=Members.memid
    LEFT JOIN country_club.Facilities
      ON country_club.Bookings.facid=Facilities.facid
  WHERE Facilities.name LIKE 'Tennis%'
    ORDER BY full_name 
    
    
/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */


SELECT Facilities.name, CONCAT( Members.firstname, ' ', Members.surname ) AS full_name,
CASE WHEN Members.firstname LIKE '%GUEST' THEN Facilities.guestcost*Bookings.slots
WHEN Members.firstname NOT LIKE '%GUEST%' THEN Facilities.membercost*Bookings.slots
END AS cost
FROM country_club.Bookings LEFT JOIN country_club.Members ON Bookings.memid=Members.memid
    LEFT JOIN country_club.Facilities ON country_club.Bookings.facid=Facilities.facid
WHERE Bookings.starttime LIKE '2012-09-14%'
HAVING cost >30
ORDER BY cost DESC


/* Q9: This time, produce the same result as in Q8, but using a subquery. */

SELECT sub.facility_name, sub.full_name, sub.cost FROM
(SELECT Facilities.name AS facility_name, CONCAT (Members.firstname, ' ', Members.surname) AS full_name, 
CASE WHEN Members.firstname='GUEST' THEN (Facilities.guestcost*Bookings.slots)
WHEN Members.firstname !='GUEST' THEN (Facilities.membercost*Bookings.slots) END AS cost
 FROM country_club.Bookings
    LEFT JOIN country_club.Members
      ON Bookings.memid=Members.memid
    LEFT JOIN country_club.Facilities
      ON country_club.Bookings.facid=Facilities.facid
 WHERE Bookings.starttime LIKE '2012-09-14%') AS sub
WHERE sub.cost>30
ORDER BY 3 DESC


/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

SELECT Facilities.name, SUM( 
      CASE WHEN Members.memid =0 THEN slots * guestcost
      ELSE slots * membercost
      END ) AS revenue
   FROM country_club.Bookings LEFT JOIN country_club.Members ON Bookings.memid=Members.memid
    LEFT JOIN country_club.Facilities ON country_club.Bookings.facid=Facilities.facid
   GROUP BY Facilities.name
HAVING revenue<1000
ORDER BY revenue
